#
# DO NOT EDIT
# This file is auto-generated by build utility
#
# Module Name:
#
#   Makefile
#
# Abstract:
#
#   Auto-generated makefile for building modules, libraries or platform
#
    

#
# Platform Macro Definition
#
PLATFORM_NAME = MiniVisor
PLATFORM_GUID = F12E3CB1-C7C0-4EED-9E78-D144A1A09F98
PLATFORM_VERSION = 1.00
PLATFORM_RELATIVE_DIR = MiniVisorPkg\Builds\Platform\EFI
PLATFORM_DIR = d:\a\compile\compile\edk2\MiniVisorPkg\Builds\Platform\EFI
PLATFORM_OUTPUT_DIR = Build\MiniVisor

#
# Module Macro Definition
#
MODULE_NAME = MiniVisorDxe
MODULE_GUID = 431B242C-8D1B-497F-AC69-352BB4713525
MODULE_NAME_GUID = MiniVisorDxe
MODULE_VERSION = 1.0
MODULE_TYPE = DXE_RUNTIME_DRIVER
MODULE_FILE = MiniVisorDxe.inf
MODULE_FILE_BASE_NAME = MiniVisorDxe
BASE_NAME = $(MODULE_NAME)
MODULE_RELATIVE_DIR = MiniVisorPkg\Builds\Platform\EFI
PACKAGE_RELATIVE_DIR = EFI
MODULE_DIR = d:\a\compile\compile\edk2\MiniVisorPkg\Builds\Platform\EFI
FFS_OUTPUT_DIR = 

MODULE_ENTRY_POINT = DriverEntry
ARCH_ENTRY_POINT = DriverEntry
IMAGE_ENTRY_POINT = _ModuleEntryPoint

INF_VERSION = 1.27
BASE_NAME = MiniVisorDxe
FILE_GUID = 431B242C-8D1B-497F-AC69-352BB4713525
MODULE_TYPE = DXE_RUNTIME_DRIVER
VERSION_STRING = 1.0

#
# Build Configuration Macro Definition
#
ARCH = X64
TOOLCHAIN = VS2019
TOOLCHAIN_TAG = VS2019
TARGET = NOOPT

#
# Build Directory Macro Definition
#
# PLATFORM_BUILD_DIR = d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019
BUILD_DIR = d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019
BIN_DIR = $(BUILD_DIR)\X64
LIB_DIR = $(BIN_DIR)
MODULE_BUILD_DIR = d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe
OUTPUT_DIR = d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT
DEBUG_DIR = d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\DEBUG
DEST_DIR_OUTPUT = $(OUTPUT_DIR)
DEST_DIR_DEBUG = $(DEBUG_DIR)

#
# Shell Command Macro
#
CP = copy /y
MV = move /y
RM = del /f /q
MD = mkdir
RD = rmdir /s /q


#
# Tools definitions specific to this module
#
APP_FLAGS = /nologo /E /TC
APP = C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.35.32215\bin\Hostx86\x64\cl.exe

ASL_FLAGS = 
ASL_OUTFLAGS =  -p
ASL = C:\ASL\iasl.exe

ASLCC_FLAGS = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable
ASLCC = C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.35.32215\bin\Hostx86\x64\cl.exe

ASLDLINK_FLAGS = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE
ASLDLINK = C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.35.32215\bin\Hostx86\x64\link.exe

ASLPP_FLAGS = /nologo /E /C /FIAutoGen.h
ASLPP = C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.35.32215\bin\Hostx86\x64\cl.exe

ASM_FLAGS = /nologo /c /WX /W3 /Cx /Zd /Zi
ASM = C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.35.32215\bin\Hostx86\x64\ml64.exe

ASM16 = C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.35.32215\bin\Hostx86\x86\ml.exe

ASMLINK_FLAGS = /nologo /tiny
ASMLINK = C:\WINDDK\3790.1830\bin\bin16\link16.exe

BROTLI_GUID =  3D532050-5CDA-4FD0-879E-0F7F630D5AFB
BROTLI = BrotliCompress

CC_FLAGS = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Z7 /Od -D DISABLE_NEW_DEPRECATED_INTERFACES
CC = C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.35.32215\bin\Hostx86\x64\cl.exe

CRC32_GUID =  FC1BCDB0-7D31-49AA-936A-A4600D9DD083
CRC32 = GenCrc32

DEPS_FLAGS = /showIncludes

DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4281 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG /ALIGN:4096 /DEBUG
DLINK = C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.35.32215\bin\Hostx86\x64\link.exe

DLINK2_FLAGS = /WHOLEARCHIVE

DTC_FLAGS = -H epapr
DTC = dtc

DTCPP = cpp

GENFW_FLAGS = --keepexceptiontable --keepzeropending --keepoptionalheader
GENFW = GenFw

LZMA_GUID =  EE4E5898-3914-4259-9D6E-DC7BD79403CF
LZMA = LzmaCompress

LZMAF86_GUID =  D42AE6BD-1352-4bfb-909A-CA72A6EAE889
LZMAF86 = LzmaF86Compress

MAKE = C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.35.32215\bin\Hostx86\x86\nmake.exe

NASM_FLAGS = -O0 -f win64 -g
NASM = nasm

NASMB_FLAGS = -f bin

OBJCOPY_ADDDEBUGFLAG =  --add-gnu-debuglink=$(DEBUG_DIR)/$(MODULE_NAME).debug
OBJCOPY_FLAGS = objcopy not needed for
OBJCOPY = echo

OPTROM_FLAGS = -e
OPTROM = EfiRom

PKCS7SIGN_GUID =  4AAFD29D-68DF-49EE-8AA9-347D375665A7
PKCS7SIGN = Pkcs7Sign

PP_FLAGS = /nologo /E /TC /FIAutoGen.h
PP = C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.35.32215\bin\Hostx86\x64\cl.exe

RC = C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x86\rc.exe

RSA2048SHA256SIGN_GUID =  A7717414-C616-4977-9420-844712A735BF
RSA2048SHA256SIGN = Rsa2048Sha256Sign

SLINK_FLAGS = /NOLOGO /LTCG
SLINK = C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.35.32215\bin\Hostx86\x64\lib.exe

SYMRENAME_FLAGS = Symbol renaming not needed for
SYMRENAME = echo

TIANO_GUID =  A31280AD-481E-41B6-95E8-127F4C984779
TIANO = TianoCompress

VFR_FLAGS = -l -n
VFR = VfrCompile

VFRPP_FLAGS = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
VFRPP = C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.35.32215\bin\Hostx86\x64\cl.exe

VPDTOOL_GUID =  8C3D856A-9BE6-468E-850A-24F7A8D38E08
VPDTOOL = BPDG

cc_resp_6 = @d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\cc_resp_6.txt
cc_resp_12 = @d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\cc_resp_12.txt

MAKE_FILE = $(MODULE_BUILD_DIR)\Makefile

#
# Build Macro
#
OBJECT_FILES =  \
    $(OUTPUT_DIR)\AutoGen.obj \
    $(OUTPUT_DIR)\Sources\Asm.obj \
    $(OUTPUT_DIR)\Sources\ExtendedPageTables.obj \
    $(OUTPUT_DIR)\Sources\HostMain.obj \
    $(OUTPUT_DIR)\Sources\HostUtils.obj \
    $(OUTPUT_DIR)\Sources\HostVmcall.obj \
    $(OUTPUT_DIR)\Sources\Ia32Utils.obj \
    $(OUTPUT_DIR)\Sources\MemoryAccess.obj \
    $(OUTPUT_DIR)\Sources\MemoryManager.obj \
    $(OUTPUT_DIR)\Sources\MemoryType.obj \
    $(OUTPUT_DIR)\Sources\MiniVisor.obj \
    $(OUTPUT_DIR)\Sources\Platform\EFI\EfiAsm.obj \
    $(OUTPUT_DIR)\Sources\Platform\EFI\EfiBitmap.obj \
    $(OUTPUT_DIR)\Sources\Platform\EFI\EfiHostInitialization.obj \
    $(OUTPUT_DIR)\Sources\Platform\EFI\EfiLogger.obj \
    $(OUTPUT_DIR)\Sources\Platform\EFI\EfiPlatform.obj

STATIC_LIBRARY_FILES =  \
    $(BIN_DIR)\MdePkg\Library\BaseDebugLibSerialPort\BaseDebugLibSerialPort\OUTPUT\BaseDebugLibSerialPort.lib \
    $(BIN_DIR)\MdePkg\Library\BaseDebugPrintErrorLevelLib\BaseDebugPrintErrorLevelLib\OUTPUT\BaseDebugPrintErrorLevelLib.lib \
    $(BIN_DIR)\MdePkg\Library\BaseIoLibIntrinsic\BaseIoLibIntrinsicSev\OUTPUT\BaseIoLibIntrinsicSev.lib \
    $(BIN_DIR)\MdePkg\Library\BaseLib\BaseLib\OUTPUT\BaseLib.lib \
    $(BIN_DIR)\MdePkg\Library\BaseMemoryLibOptDxe\BaseMemoryLibOptDxe\OUTPUT\BaseMemoryLibOptDxe.lib \
    $(BIN_DIR)\MdePkg\Library\BasePrintLib\BasePrintLib\OUTPUT\BasePrintLib.lib \
    $(BIN_DIR)\MdePkg\Library\BaseSynchronizationLib\BaseSynchronizationLib\OUTPUT\BaseSynchronizationLib.lib \
    $(BIN_DIR)\MdePkg\Library\BaseTimerLibNullTemplate\BaseTimerLibNullTemplate\OUTPUT\BaseTimerLibNullTemplate.lib \
    $(BIN_DIR)\MdePkg\Library\DxePcdLib\DxePcdLib\OUTPUT\DxePcdLib.lib \
    $(BIN_DIR)\MdePkg\Library\RegisterFilterLibNull\RegisterFilterLibNull\OUTPUT\FilterLibNull.lib \
    $(BIN_DIR)\MdePkg\Library\UefiBootServicesTableLib\UefiBootServicesTableLib\OUTPUT\UefiBootServicesTableLib.lib \
    $(BIN_DIR)\MdePkg\Library\UefiDevicePathLibDevicePathProtocol\UefiDevicePathLibDevicePathProtocol\OUTPUT\UefiDevicePathLibDevicePathProtocol.lib \
    $(BIN_DIR)\MdePkg\Library\UefiDriverEntryPoint\UefiDriverEntryPoint\OUTPUT\UefiDriverEntryPoint.lib \
    $(BIN_DIR)\MdePkg\Library\UefiLib\UefiLib\OUTPUT\UefiLib.lib \
    $(BIN_DIR)\MdePkg\Library\UefiMemoryAllocationLib\UefiMemoryAllocationLib\OUTPUT\UefiMemoryAllocationLib.lib \
    $(BIN_DIR)\MdePkg\Library\UefiRuntimeServicesTableLib\UefiRuntimeServicesTableLib\OUTPUT\UefiRuntimeServicesTableLib.lib \
    $(BIN_DIR)\PcAtChipsetPkg\Library\SerialIoLib\SerialIoLib\OUTPUT\PcAtSerialPortLib.lib \
    $(OUTPUT_DIR)\MiniVisorDxe.lib

INC =  \
    /I$(WORKSPACE)\MiniVisorPkg\Externals\ia32-doc\out \
    /I$(WORKSPACE)\MiniVisorPkg\Builds\Platform\EFI \
    /I$(DEBUG_DIR) \
    /I$(WORKSPACE)\MdePkg \
    /I$(WORKSPACE)\MdePkg\Include \
    /I$(WORKSPACE)\MdePkg\Test\UnitTest\Include \
    /I$(WORKSPACE)\MdePkg\Include\X64 \
    /I$(WORKSPACE)\MiniVisorPkg\Sources \
    /I$(WORKSPACE)\MiniVisorPkg\Sources\Platform\EFI

NASM_INC =  \
    -I$(WORKSPACE)\MiniVisorPkg\Externals\ia32-doc\out\ \
    -I$(WORKSPACE)\MiniVisorPkg\Builds\Platform\EFI\ \
    -I$(DEBUG_DIR)\ \
    -I$(WORKSPACE)\MdePkg\ \
    -I$(WORKSPACE)\MdePkg\Include\ \
    -I$(WORKSPACE)\MdePkg\Test\UnitTest\Include\ \
    -I$(WORKSPACE)\MdePkg\Include\X64\ \
    -I$(WORKSPACE)\MiniVisorPkg\Sources\ \
    -I$(WORKSPACE)\MiniVisorPkg\Sources\Platform\EFI^\

INC_LIST = d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\inc.lst
OBJECT_FILES_LIST = d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\object_files.lst
STATIC_LIBRARY_FILES_LIST = d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\static_library_files.lst
OBJLIST_0 = $(OUTPUT_DIR)\Sources\Platform\EFI\EfiBitmap.obj $(OUTPUT_DIR)\Sources\Platform\EFI\EfiLogger.obj $(OUTPUT_DIR)\Sources\Platform\EFI\EfiPlatform.obj $(OUTPUT_DIR)\Sources\Platform\EFI\EfiHostInitialization.obj
OBJLIST_1 = $(OUTPUT_DIR)\Sources\MemoryManager.obj $(OUTPUT_DIR)\Sources\MemoryAccess.obj $(OUTPUT_DIR)\Sources\ExtendedPageTables.obj $(OUTPUT_DIR)\Sources\HostMain.obj $(OUTPUT_DIR)\Sources\Ia32Utils.obj $(OUTPUT_DIR)\Sources\HostUtils.obj $(OUTPUT_DIR)\Sources\MemoryType.obj $(OUTPUT_DIR)\Sources\HostVmcall.obj $(OUTPUT_DIR)\Sources\MiniVisor.obj
OBJLIST_2 = $(OUTPUT_DIR)\AutoGen.obj


#
# Overridable Target Macro Definitions
#
FORCE_REBUILD = force_build
INIT_TARGET = init
PCH_TARGET =
BC_TARGET = 
CODA_TARGET = d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\MiniVisorDxe.efi \
              

#
# Default target, which will build dependent libraries in addition to source files
#

all: mbuild


#
# Target used when called from platform makefile, which will bypass the build of dependent libraries
#

pbuild: $(INIT_TARGET) $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# ModuleTarget
#

mbuild: $(INIT_TARGET) $(BC_TARGET) gen_libs $(PCH_TARGET) $(CODA_TARGET)

#
# Build Target used in multi-thread build mode, which will bypass the init and gen_libs targets
#

tbuild: $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# Phony target which is used to force executing commands for a target
#
force_build:
	-@

#
# Target to update the FD
#

fds: mbuild gen_fds

#
# Initialization target: print build information and create necessary directories
#
init: info dirs

info:
	-@echo Building ... $(MODULE_DIR)\$(MODULE_FILE) [$(ARCH)]

dirs:
	-@if not exist $(DEBUG_DIR) $(MD) $(DEBUG_DIR)
	-@if not exist $(OUTPUT_DIR) $(MD) $(OUTPUT_DIR)


strdefs:
	-@$(CP) $(DEBUG_DIR)\AutoGen.h $(DEBUG_DIR)\$(MODULE_NAME)StrDefs.h

#
# GenLibsTarget
#
gen_libs:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\RegisterFilterLibNull\RegisterFilterLibNull\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseMemoryLibOptDxe\BaseMemoryLibOptDxe\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\DxePcdLib\DxePcdLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseLib\BaseLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseIoLibIntrinsic\BaseIoLibIntrinsicSev\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseDebugPrintErrorLevelLib\BaseDebugPrintErrorLevelLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\PcAtChipsetPkg\Library\SerialIoLib\SerialIoLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePrintLib\BasePrintLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseDebugLibSerialPort\BaseDebugLibSerialPort\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiBootServicesTableLib\UefiBootServicesTableLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiMemoryAllocationLib\UefiMemoryAllocationLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiRuntimeServicesTableLib\UefiRuntimeServicesTableLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiDevicePathLibDevicePathProtocol\UefiDevicePathLibDevicePathProtocol\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseTimerLibNullTemplate\BaseTimerLibNullTemplate\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiDriverEntryPoint\UefiDriverEntryPoint\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiLib\UefiLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseSynchronizationLib\BaseSynchronizationLib\Makefile
	@cd $(MODULE_BUILD_DIR)

#
# Build Flash Device Image
#
gen_fds:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BUILD_DIR)\Makefile fds
	@cd $(MODULE_BUILD_DIR)

!INCLUDE $(MODULE_BUILD_DIR)\dependency
!INCLUDE $(MODULE_BUILD_DIR)\deps_target

#
# Individual Object Build Targets
#
$(OUTPUT_DIR)\Sources\Asm.obj : $(MAKE_FILE)
$(OUTPUT_DIR)\Sources\Asm.obj : $(DEBUG_DIR)\AutoGen.h
$(OUTPUT_DIR)\Sources\Asm.obj : $(WORKSPACE)\MiniVisorPkg\Sources\Asm.asm
	Trim --asm-file -o d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\Sources\Asm.i -i $(INC_LIST) d:\a\compile\compile\edk2\MiniVisorPkg\Sources\Asm.asm
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) d:\a\compile\compile\edk2\MiniVisorPkg\Sources\Asm.asm > d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\Sources\Asm.ii
	Trim --source-code --convert-hex --trim-long -o d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\Sources\Asm.iiii d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\Sources\Asm.ii
	"$(ASM)" /Fod:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\Sources\Asm.obj $(ASM_FLAGS) /Id:\a\compile\compile\edk2\MiniVisorPkg\Sources $(INC) d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\Sources\Asm.iiii

$(OUTPUT_DIR)\Sources\Platform\EFI\EfiAsm.obj : $(MAKE_FILE)
$(OUTPUT_DIR)\Sources\Platform\EFI\EfiAsm.obj : $(DEBUG_DIR)\AutoGen.h
$(OUTPUT_DIR)\Sources\Platform\EFI\EfiAsm.obj : $(WORKSPACE)\MiniVisorPkg\Sources\Platform\EFI\EfiAsm.asm
	Trim --asm-file -o d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\Sources\Platform\EFI\EfiAsm.i -i $(INC_LIST) d:\a\compile\compile\edk2\MiniVisorPkg\Sources\Platform\EFI\EfiAsm.asm
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) d:\a\compile\compile\edk2\MiniVisorPkg\Sources\Platform\EFI\EfiAsm.asm > d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\Sources\Platform\EFI\EfiAsm.ii
	Trim --source-code --convert-hex --trim-long -o d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\Sources\Platform\EFI\EfiAsm.iiii d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\Sources\Platform\EFI\EfiAsm.ii
	"$(ASM)" /Fod:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\Sources\Platform\EFI\EfiAsm.obj $(ASM_FLAGS) /Id:\a\compile\compile\edk2\MiniVisorPkg\Sources\Platform\EFI $(INC) d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\Sources\Platform\EFI\EfiAsm.iiii

$(OUTPUT_DIR)\MiniVisorDxe.lib : $(OBJECT_FILES)
$(OUTPUT_DIR)\MiniVisorDxe.lib : $(OBJECT_FILES_LIST)
	"$(SLINK)" $(SLINK_FLAGS) /OUT:d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\MiniVisorDxe.lib @$(OBJECT_FILES_LIST)

$(DEBUG_DIR)\MiniVisorDxe.dll : $(MAKE_FILE)
$(DEBUG_DIR)\MiniVisorDxe.dll : $(STATIC_LIBRARY_FILES)
$(DEBUG_DIR)\MiniVisorDxe.dll : $(STATIC_LIBRARY_FILES_LIST)
	"$(DLINK)" /OUT:d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\DEBUG\MiniVisorDxe.dll $(DLINK_FLAGS) $(DLINK2_FLAGS) $(DLINK_SPATH) @$(STATIC_LIBRARY_FILES_LIST)
	"$(DLINK)" /OUT:d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\DEBUG\MiniVisorDxe.dll $(DLINK_FLAGS) $(DLINK_SPATH) @$(STATIC_LIBRARY_FILES_LIST)

$(OUTPUT_DIR)\MiniVisorDxe.efi : $(DEBUG_DIR)\MiniVisorDxe.dll
	"$(GENFW)" -e $(MODULE_TYPE) -o d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\MiniVisorDxe.efi d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\DEBUG\MiniVisorDxe.dll $(GENFW_FLAGS)
	$(CP) d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\MiniVisorDxe.efi $(DEBUG_DIR)
	$(CP) d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\MiniVisorDxe.efi $(BIN_DIR)\$(MODULE_NAME_GUID).efi
	-$(CP) $(DEBUG_DIR)\*.map $(OUTPUT_DIR)
	-$(CP) $(DEBUG_DIR)\*.pdb $(OUTPUT_DIR)

$(OBJLIST_0):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\MiniVisorPkg\Sources\Platform\EFI\EfiPlatform.c \
	$(DEBUG_DIR)\AutoGen.h \
	$(WORKSPACE)\MiniVisorPkg\Sources\Platform\EFI\EfiHostInitialization.c \
	$(WORKSPACE)\MiniVisorPkg\Sources\Platform\EFI\EfiLogger.c \
	$(WORKSPACE)\MiniVisorPkg\Sources\Platform\EFI\EfiBitmap.c
	"$(CC)" /Fod:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\Sources\Platform\EFI\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) $(cc_resp_6)

$(OBJLIST_1):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\MiniVisorPkg\Sources\HostUtils.c \
	$(DEBUG_DIR)\AutoGen.h \
	$(WORKSPACE)\MiniVisorPkg\Sources\Ia32Utils.c \
	$(WORKSPACE)\MiniVisorPkg\Sources\MemoryType.c \
	$(WORKSPACE)\MiniVisorPkg\Sources\HostMain.c \
	$(WORKSPACE)\MiniVisorPkg\Sources\MemoryManager.c \
	$(WORKSPACE)\MiniVisorPkg\Sources\MemoryAccess.c \
	$(WORKSPACE)\MiniVisorPkg\Sources\MiniVisor.c \
	$(WORKSPACE)\MiniVisorPkg\Sources\HostVmcall.c \
	$(WORKSPACE)\MiniVisorPkg\Sources\ExtendedPageTables.c
	"$(CC)" /Fod:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\Sources\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) $(cc_resp_12)

$(OBJLIST_2):  \
	$(MAKE_FILE) \
	$(DEBUG_DIR)\AutoGen.c \
	$(DEBUG_DIR)\AutoGen.h
	"$(CC)" /Fod:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\OUTPUT\.\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) d:\a\compile\compile\edk2\Build\MiniVisor\NOOPT_VS2019\X64\MiniVisorPkg\Builds\Platform\EFI\MiniVisorDxe\DEBUG\AutoGen.c



#
# clean all intermediate files
#
clean:
	if exist $(OUTPUT_DIR) $(RD) $(OUTPUT_DIR)
		$(RM) AutoGenTimeStamp

#
# clean all generated files
#
cleanall:
	if exist $(DEBUG_DIR) $(RD) $(DEBUG_DIR)
	if exist $(OUTPUT_DIR) $(RD) $(OUTPUT_DIR)
	$(RM) *.pdb *.idb > NUL 2>&1
	$(RM) $(BIN_DIR)\$(MODULE_NAME).efi
	$(RM) AutoGenTimeStamp

#
# clean all dependent libraries built
#
cleanlib:
	-@if exist $(BIN_DIR)\MdePkg\Library\RegisterFilterLibNull\RegisterFilterLibNull\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\RegisterFilterLibNull\RegisterFilterLibNull\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseMemoryLibOptDxe\BaseMemoryLibOptDxe\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseMemoryLibOptDxe\BaseMemoryLibOptDxe\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\DxePcdLib\DxePcdLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\DxePcdLib\DxePcdLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseLib\BaseLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseLib\BaseLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseIoLibIntrinsic\BaseIoLibIntrinsicSev\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseIoLibIntrinsic\BaseIoLibIntrinsicSev\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseDebugPrintErrorLevelLib\BaseDebugPrintErrorLevelLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseDebugPrintErrorLevelLib\BaseDebugPrintErrorLevelLib\Makefile cleanall
	-@if exist $(BIN_DIR)\PcAtChipsetPkg\Library\SerialIoLib\SerialIoLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\PcAtChipsetPkg\Library\SerialIoLib\SerialIoLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BasePrintLib\BasePrintLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePrintLib\BasePrintLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseDebugLibSerialPort\BaseDebugLibSerialPort\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseDebugLibSerialPort\BaseDebugLibSerialPort\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\UefiBootServicesTableLib\UefiBootServicesTableLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiBootServicesTableLib\UefiBootServicesTableLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\UefiMemoryAllocationLib\UefiMemoryAllocationLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiMemoryAllocationLib\UefiMemoryAllocationLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\UefiRuntimeServicesTableLib\UefiRuntimeServicesTableLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiRuntimeServicesTableLib\UefiRuntimeServicesTableLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\UefiDevicePathLibDevicePathProtocol\UefiDevicePathLibDevicePathProtocol\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiDevicePathLibDevicePathProtocol\UefiDevicePathLibDevicePathProtocol\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseTimerLibNullTemplate\BaseTimerLibNullTemplate\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseTimerLibNullTemplate\BaseTimerLibNullTemplate\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\UefiDriverEntryPoint\UefiDriverEntryPoint\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiDriverEntryPoint\UefiDriverEntryPoint\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\UefiLib\UefiLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiLib\UefiLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseSynchronizationLib\BaseSynchronizationLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseSynchronizationLib\BaseSynchronizationLib\Makefile cleanall
	@cd $(MODULE_BUILD_DIR)

